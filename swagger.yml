swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Beautiful Occupation API 
consumes:
  - application/json
produces:
  - application/json

basePath: /api/v1/

# Paths supported by the server application
paths:
  /log-in:
    post:
      operationId: controller.auth.login
      tags:
        - Auth
      summary: User login api 
      description: User login method to get json web token
      parameters:
        - name: login
          in: body
          required: True
          schema :
            type : object
            items:
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        200:
           description: Successfully logged in !!!
           schema:
            properties:
              access_token:
                type: string
  /sign-up:
    post:
      operationId: controller.auth.signup
      tags : 
        - Auth
      summary :  User sign up 
      description: User sign up process  
      parameters:
        - name : login
          in : body
          required : True
          schema:
            type : object
            items:
              properties:
                username:
                  type : string       
                password:
                  type : string
      responses:
        200:
          description: response
          schema:
            type: object
            properties:
              data : 
                type : string


  /current_user:
    post:
      operationId: controller.auth.get_user
      tags: 
        - Auth
      summary: Get current user info from json web token
      parameters:
        - name : access_token
          in : body
          required : True
          schema :
            type : object
            properties:
              jwt : 
                type: string
      responses:
        200:
          description : Successfully returned the json web token
          schema :
            type : object
            properties:
                fname:
                  type: string
                lname:
                  type: string
                occupation:
                  type: string
                location:
                  type: string
                cell:
                  type: string
                timestamp:
                  type: string

  /people:
    get:
      operationId: controller.people.read_all
      tags:
        - People
      summary: Read the entire list of people
      description: Read the list of people
      parameters:
        - name: length
          in: query
          type: integer
          description: Number of people to get from people
          required: false
        - name: offset
          in: query
          type: integer
          description: Offset from beginning of list where to start gathering people
          required: false
      responses:
        200:
          description: Successfully read people list operation
          schema: 
            type: array
            items:
              properties:
                user_id:
                  type: integer
                fname:
                  type: string
                lname:
                  type: string
                occupation:
                  type: string
                location:
                  type: string
                cell:
                  type: string
                timestamp:
                  type: string

    post:
      operationId: controller.people.create
      tags:
        - People
      summary: Create a person and add it to the people list
      description: Create a new person in the people list
      parameters:
        - name: person
          in: body
          description: Person to create
          required: True
          schema:
            type: object
            properties:
              fname:
                type: string
                description: First name of person to create
              lname:
                type: string
                description: Last name of person to create
              occupation:
                type: string
              location:
                type: string
              cell:
                type: string
      responses:
        201:
          description: Successfully created person in list

  /people/{person_id}:
    get:
      operationId: controller.people.read_one
      tags:
        - People
      summary: Read one person from the people list
      description: Read one person from the people list
      parameters:
        - name: person_id
          in: path
          description: Last name of the person to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read person from people list operation
          schema:
            properties:
              fname:
                type: string
              lname:
                type: string
              timestamp:
                type: string
              occupation:
                type: string
              location:
                type: string
              cell:
                type: string
    
    put:
      operationId: controller.people.update
      tags:
        - People
      summary: Update a person in the people list
      description: Update a person in the people list
      parameters:
        - name: person_id
          in: path
          description: person_id save in the database
          type: string
          required: True
        - name: person
          in: body
          schema:
            type: object
            properties:
              fname:
                type: string
              lname:
                type: string
              occupation:
                type: string
              location:
                type: string
              cell:
                type: string  
      responses:
        200:
          description: Successfully updated person in people list
    
    delete:
      operationId: controller.people.delete
      tags:
        - People
      summary: Delete a person from the people list
      description: Delete a person
      parameters:
        - name: person_id
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully deleted a person from people list